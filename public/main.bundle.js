(()=>{"use strict";class e{constructor(e={}){this.vad=null,this.mediaStream=null,this.callbacks=e,this.listening=!1,this.muted=!1}async initialize(){try{return this.vad=await vad.MicVAD.new({onSpeechStart:()=>{console.log("Parole détectée"),this.callbacks.onSpeechStart&&this.callbacks.onSpeechStart()},onSpeechEnd:e=>{console.log("Fin de parole"),!this.muted&&this.callbacks.onSpeechEnd&&this.callbacks.onSpeechEnd(e)},onVADMisfire:()=>{console.log("Fausse détection"),this.callbacks.onVADMisfire&&this.callbacks.onVADMisfire()}}),this.mediaStream=await navigator.mediaDevices.getUserMedia({audio:!0}),!0}catch(e){return console.error("Erreur lors de l'initialisation du VAD:",e),this.callbacks.onError&&this.callbacks.onError(e),!1}}start(){this.vad&&(this.vad.start(),this.listening=!0)}pause(){this.vad&&(this.vad.pause(),this.listening=!1)}stop(){this.pause(),this.mediaStream&&this.mediaStream.getTracks().forEach((e=>e.stop())),this.listening=!1}setMute(e){this.muted=e,this.mediaStream&&this.mediaStream.getAudioTracks().forEach((t=>{t.enabled=!e}))}isListening(){return this.listening}isMuted(){return this.muted}}class t{static floatTo16BitPCM(e,t,s){for(let n=0;n<s.length;n++,t+=2){const o=Math.max(-1,Math.min(1,s[n]));e.setInt16(t,o<0?32768*o:32767*o,!0)}}static writeString(e,t,s){for(let n=0;n<s.length;n++)e.setUint8(t+n,s.charCodeAt(n))}static encodeWAV(e,t=16e3){const s=new ArrayBuffer(44+2*e.length),n=new DataView(s);return this.writeString(n,0,"RIFF"),n.setUint32(4,36+2*e.length,!0),this.writeString(n,8,"WAVE"),this.writeString(n,12,"fmt "),n.setUint32(16,16,!0),n.setUint16(20,1,!0),n.setUint16(22,1,!0),n.setUint32(24,t,!0),n.setUint32(28,2*t,!0),n.setUint16(32,2,!0),n.setUint16(34,16,!0),this.writeString(n,36,"data"),n.setUint32(40,2*e.length,!0),this.floatTo16BitPCM(n,44,e),s}static createWavBlob(e){const t=this.encodeWAV(e);return new Blob([t],{type:"audio/wav"})}}class s{constructor(){this.currentAbortController=null}async transcribe(e,s){if(!s)throw new Error("Aucune clé API fournie");this.currentAbortController=new AbortController;const n=this.currentAbortController.signal;try{const o=t.createWavBlob(e),r=new FormData;r.append("file",o,"audio.wav"),r.append("model","whisper-large-v3-turbo"),r.append("temperature","0"),r.append("response_format","json"),r.append("language","fr");const i=await fetch("https://api.groq.com/openai/v1/audio/transcriptions",{method:"POST",headers:{Authorization:`Bearer ${s}`},body:r,signal:n});if(!i.ok)throw new Error(`Erreur de transcription: ${i.status} - ${i.statusText}`);return(await i.json()).text}finally{this.currentAbortController=null}}cancel(){this.currentAbortController&&(this.currentAbortController.abort(),this.currentAbortController=null)}}class n{constructor(){this.messageHistory=[],this.currentAbortController=null}async sendMessage(e,t){if(!t)throw new Error("Aucune clé API fournie");this.messageHistory.push({role:"user",content:e}),this.currentAbortController=new AbortController;const s=this.currentAbortController.signal;try{const e=await fetch("https://api.groq.com/openai/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({messages:this.messageHistory,model:"gemma2-9b-it"}),signal:s});if(!e.ok)throw new Error(`Erreur de chat: ${e.status} - ${e.statusText}`);const n=await e.json();if(n.choices&&n.choices[0]&&n.choices[0].message)return this.messageHistory.push(n.choices[0].message),n.choices[0].message.content;throw new Error("Format de réponse invalide")}finally{this.currentAbortController=null}}cancel(){this.currentAbortController&&(this.currentAbortController.abort(),this.currentAbortController=null)}clearHistory(){this.messageHistory=[]}getHistory(){return[...this.messageHistory]}}class o{constructor(){this.currentAbortController=null,this.audioElement=document.getElementById("tts-player"),this.isSpeaking=!1,this.onSpeakingStarted=null,this.onSpeakingEnded=null,this.onSpeakingInterrupted=null,this.audioElement||(console.error("Élément audio non trouvé dans le DOM, création d'un élément temporaire"),this.audioElement=document.createElement("audio"),this.audioElement.id="tts-player",document.body.appendChild(this.audioElement)),this.setupAudioListeners()}setupAudioListeners(){this.audioElement.onplay=()=>{console.log("TTS: lecture démarrée"),this.isSpeaking=!0,this.onSpeakingStarted&&this.onSpeakingStarted()},this.audioElement.onended=()=>{console.log("TTS: lecture terminée"),this.isSpeaking=!1,this.onSpeakingEnded&&this.onSpeakingEnded()},this.audioElement.onerror=e=>{console.error("TTS: erreur de lecture",e),this.isSpeaking=!1,this.onSpeakingInterrupted&&this.onSpeakingInterrupted()},this.audioElement.onpause=()=>{this.isSpeaking&&(console.log("TTS: lecture mise en pause"),this.isSpeaking=!1,this.onSpeakingInterrupted&&this.onSpeakingInterrupted())}}async speak(e){if(!e)return Promise.resolve();this.currentAbortController=new AbortController;const t=this.currentAbortController.signal;try{console.log("TTS: Envoi de la requête de synthèse vocale");const s=await fetch("https://chatbot-20102024-8c94bbb4eddf.herokuapp.com/synthesize",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:e,voice:"fr-FR-DeniseNeural"}),signal:t});if(!s.ok)throw new Error(`Erreur de synthèse vocale: ${s.status} - ${s.statusText}`);const n=await s.blob(),o=URL.createObjectURL(n);return this.audioElement.src&&URL.revokeObjectURL(this.audioElement.src),console.log("TTS: Audio reçu, configuration du lecteur"),this.audioElement.src=o,console.log("TTS: Tentative de lecture"),new Promise(((e,t)=>{const s=setTimeout((()=>{console.warn("TTS: Timeout de sécurité déclenché"),this.isSpeaking=!1,this.onSpeakingEnded&&this.onSpeakingEnded(),e()}),3e4),n=()=>{clearTimeout(s),this.audioElement.removeEventListener("ended",n),e()};this.audioElement.addEventListener("ended",n);const o=t=>{clearTimeout(s),this.audioElement.removeEventListener("error",o),console.error("TTS: Erreur lors de la lecture",t),e()};this.audioElement.addEventListener("error",o),this.audioElement.play().catch((t=>{clearTimeout(s),console.error("TTS: Impossible de démarrer la lecture",t),this.isSpeaking=!1,this.onSpeakingInterrupted&&this.onSpeakingInterrupted(),e()}))}))}catch(e){return console.error("TTS: Erreur générale",e),this.isSpeaking=!1,this.onSpeakingInterrupted&&this.onSpeakingInterrupted(),Promise.resolve()}finally{this.currentAbortController=null}}cancel(){this.currentAbortController&&(this.currentAbortController.abort(),this.currentAbortController=null),this.audioElement&&(this.audioElement.pause(),this.audioElement.currentTime=0,this.isSpeaking&&(console.log("TTS: Lecture interrompue manuellement"),this.isSpeaking=!1,this.onSpeakingInterrupted&&this.onSpeakingInterrupted()))}}class r{constructor(){this.elements={startButton:document.getElementById("start-button"),stopButton:document.getElementById("stop-button"),muteButton:document.getElementById("mute-button"),statusIndicator:document.getElementById("status-indicator"),statusText:document.getElementById("status-text"),segmentsCount:document.getElementById("segments-count"),segmentsList:document.getElementById("segments-list"),apiKeyInput:document.getElementById("api-key")},this.elements.stopButton&&(this.elements.stopButton.style.display="none")}updateUI(e,t=!1,s=!1){e?(this.elements.startButton.style.display="none",this.elements.stopButton.style.display="flex",this.elements.startButton.disabled=!0,this.elements.startButton.classList.add("bg-gray-300","text-gray-500","cursor-not-allowed"),this.elements.startButton.classList.remove("bg-blue-800","text-white","hover:bg-blue-900"),this.elements.stopButton.disabled=!1,this.elements.stopButton.classList.add("bg-red-500","text-white","hover:bg-red-600"),this.elements.stopButton.classList.remove("bg-slate-200","text-slate-400","cursor-not-allowed"),this.elements.muteButton.disabled=!1,this.elements.muteButton.classList.remove("cursor-not-allowed"),s?(this.elements.statusText.textContent="Traitement en cours...",this.elements.statusIndicator.classList.remove("bg-slate-200","bg-yellow-500","bg-green-500","bg-red-500"),this.elements.statusIndicator.classList.add("bg-blue-500")):(this.elements.statusText.textContent=t?"Parole détectée":"En attente de parole",this.elements.statusIndicator.classList.remove("bg-slate-200","bg-blue-500","bg-red-500"),this.elements.statusIndicator.classList.add(t?"bg-green-500":"bg-yellow-500"))):(this.elements.startButton.style.display="flex",this.elements.stopButton.style.display="none",this.elements.startButton.disabled=!1,this.elements.startButton.classList.remove("bg-gray-300","text-gray-500","cursor-not-allowed"),this.elements.startButton.classList.add("bg-blue-800","text-white","hover:bg-blue-900"),this.elements.stopButton.disabled=!0,this.elements.stopButton.classList.remove("bg-red-500","text-white","hover:bg-red-600"),this.elements.stopButton.classList.add("bg-slate-200","text-slate-400","cursor-not-allowed"),this.elements.muteButton.disabled=!0,this.elements.muteButton.classList.add("cursor-not-allowed"),this.elements.statusText.textContent="En attente de démarrer",this.elements.statusIndicator.classList.remove("bg-green-500","bg-yellow-500","bg-red-500","bg-blue-500"),this.elements.statusIndicator.classList.add("bg-slate-200"))}updateMuteState(e){e?(this.elements.muteButton.innerHTML='<i class="fas fa-microphone mr-2"></i>',this.elements.muteButton.classList.remove("bg-amber-500","hover:bg-amber-600"),this.elements.muteButton.classList.add("bg-green-500","hover:bg-green-600"),this.elements.statusIndicator.classList.remove("bg-yellow-500","bg-green-500"),this.elements.statusIndicator.classList.add("bg-red-500"),this.elements.statusText.textContent="Microphone coupé"):(this.elements.muteButton.innerHTML='<i class="fas fa-microphone-slash mr-2"></i>',this.elements.muteButton.classList.remove("bg-green-500","hover:bg-green-600"),this.elements.muteButton.classList.add("bg-amber-500","hover:bg-amber-600"),this.elements.statusIndicator.classList.remove("bg-red-500"),this.elements.statusIndicator.classList.add("bg-yellow-500"),this.elements.statusText.textContent="En attente de parole")}addSegment(e,t){this.elements.segmentsCount.textContent=e;const s=document.createElement("div");s.className="text-sm text-gray-700",s.textContent=`Segment #${e} - ${Math.round(100*t)/100}s`,this.elements.segmentsList.appendChild(s)}resetSegments(){this.elements.segmentsCount.textContent="0",this.elements.segmentsList.innerHTML=""}getApiKey(){return this.elements.apiKeyInput.value}setApiKey(e){this.elements.apiKeyInput.value=e}}class i{constructor(e){this.container=e}addPendingUserMessage(e){const t=document.createElement("div");return t.className="message user mb-6 flex justify-end",t.id=`message-${e}`,t.innerHTML=`\n            <div class="bg-blue-900 text-white p-4 rounded-2xl rounded-tr-none shadow-md max-w-[80%]">\n                <div><span class="inline-block animate-pulse">Transcription en cours...</span></div>\n                <div class="flex justify-end mt-1">\n                    <span class="text-xs text-blue-200">${(new Date).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}</span>\n                </div>\n            </div>\n        `,this.container.appendChild(t),this.scrollToBottom(),t}updateUserMessage(e,t){const s=document.getElementById(`message-${e}`);if(s){const e=s.querySelector("div div:first-child");e.innerHTML="",e.textContent=t,e.classList.remove("animate-pulse")}this.scrollToBottom()}addPendingAssistantMessage(e){const t=document.createElement("div");return t.className="message assistant mb-6 flex justify-start",t.id=`response-${e}`,t.innerHTML=`\n            <div class="bg-slate-100 p-4 rounded-2xl rounded-tl-none shadow-sm max-w-[80%] text-slate-800">\n                <div><span class="inline-block animate-pulse">Génération de la réponse...</span></div>\n                <div class="flex justify-start mt-1">\n                    <span class="text-xs text-slate-500">${(new Date).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}</span>\n                </div>\n            </div>\n        `,this.container.appendChild(t),this.scrollToBottom(),t}updateAssistantMessage(e,t){const s=document.getElementById(`response-${e}`);if(s){const e=s.querySelector("div div:first-child");e.innerHTML="",e.textContent=t,e.classList.remove("animate-pulse")}this.scrollToBottom()}addInfoMessage(e,t="info"){const s=document.createElement("div");s.className=`p-3 mb-4 ${{info:"bg-slate-200 text-slate-800",error:"bg-red-100 text-red-800",success:"bg-green-100 text-green-800",warning:"bg-amber-100 text-amber-800"}[t]} rounded-md text-center text-sm max-w-[80%] mx-auto shadow-sm`,s.textContent=e,this.container.appendChild(s),this.scrollToBottom()}scrollToBottom(){this.container.scrollTop=this.container.scrollHeight}addUserTextMessage(e,t){const s=document.createElement("div");return s.className="message user mb-6 flex justify-end",s.id=`message-${e}`,s.innerHTML=`\n            <div class="bg-blue-900 text-white p-4 rounded-2xl rounded-tr-none shadow-md max-w-[80%]">\n                <p>${t}</p>\n                <div class="flex justify-end mt-1">\n                    <span class="text-xs text-blue-200">${(new Date).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}</span>\n                </div>\n            </div>\n        `,this.container.appendChild(s),this.scrollToBottom(),s}clearConversation(){this.container.innerHTML=""}}class a{setItem(e,t){localStorage.setItem(e,t)}getItem(e){return localStorage.getItem(e)}removeItem(e){localStorage.removeItem(e)}}class l{constructor(e={}){this.mediaRecorder=null,this.mediaStream=null,this.audioChunks=[],this.recording=!1,this.callbacks=e}async initialize(){try{this.mediaStream=await navigator.mediaDevices.getUserMedia({audio:{sampleRate:16e3,channelCount:1,echoCancellation:!0,noiseSuppression:!0}});const e={mimeType:"audio/webm;codecs=opus",audioBitsPerSecond:16e3};try{this.mediaRecorder=new MediaRecorder(this.mediaStream,e)}catch(e){console.warn("Format audio spécifié non pris en charge, utilisation du format par défaut"),this.mediaRecorder=new MediaRecorder(this.mediaStream)}return this.mediaRecorder.ondataavailable=e=>{e.data.size>0&&this.audioChunks.push(e.data)},this.mediaRecorder.onstop=async()=>{if(console.log("Enregistrement terminé, traitement en cours..."),0!==this.audioChunks.length)try{const e=new Blob(this.audioChunks,{type:"audio/webm;codecs=opus"});console.log("Taille du blob audio:",e.size,"octets");const t=await e.arrayBuffer();console.log("Taille de l'ArrayBuffer:",t.byteLength,"octets");const s=new(window.AudioContext||window.webkitAudioContext);let n;try{n=await s.decodeAudioData(t),console.log("Audio décodé avec succès, durée:",n.duration,"s, canaux:",n.numberOfChannels)}catch(e){console.error("Erreur lors du décodage audio:",e);const t=new Blob(this.audioChunks,{type:"audio/wav"}),o=await t.arrayBuffer();n=await s.decodeAudioData(o)}const o=n.getChannelData(0);console.log("Données audio extraites, longueur:",o.length,"échantillons"),console.log("Échantillon de valeurs:",o.slice(0,5));const r=16e3;let i=o;n.sampleRate!==r&&(console.log("Rééchantillonnage de",n.sampleRate,"Hz à",r,"Hz"),i=this.resampleAudio(o,n.sampleRate,r),console.log("Audio rééchantillonné, nouvelle longueur:",i.length)),this.audioChunks=[],this.callbacks.onRecordingComplete&&this.callbacks.onRecordingComplete(i)}catch(e){console.error("Erreur lors du traitement de l'audio enregistré:",e),this.callbacks.onError&&this.callbacks.onError(e)}else console.warn("Pas de données audio enregistrées")},!0}catch(e){return console.error("Erreur lors de l'initialisation de l'enregistreur:",e),this.callbacks.onError&&this.callbacks.onError(e),!1}}startRecording(){if(this.mediaRecorder&&!this.recording){this.audioChunks=[];try{this.mediaRecorder.start(100)}catch(e){console.error("Erreur au démarrage de l'enregistrement:",e),this.mediaRecorder.start()}this.recording=!0,console.log("Enregistrement démarré"),this.callbacks.onRecordingStart&&this.callbacks.onRecordingStart()}}stopRecording(){this.mediaRecorder&&this.recording&&(this.mediaRecorder.stop(),this.recording=!1,console.log("Enregistrement arrêté"),this.callbacks.onRecordingStop&&this.callbacks.onRecordingStop())}dispose(){this.mediaStream&&this.mediaStream.getTracks().forEach((e=>e.stop())),this.mediaRecorder=null,this.mediaStream=null,this.audioChunks=[],this.recording=!1}isRecording(){return this.recording}resampleAudio(e,t,s){if(t===s)return e;const n=t/s,o=Math.round(e.length/n),r=new Float32Array(o);for(let t=0;t<o;t++){const s=t*n,o=Math.floor(s),i=s-o;o+1<e.length?r[t]=e[o]*(1-i)+e[o+1]*i:r[t]=e[o]}return r}}document.addEventListener("DOMContentLoaded",(()=>{const t=new a,d=new r,c=new i(document.getElementById("conversation-list")),u=new s,m=new n,h=new o;!function(){if("function"==typeof Swiper)return new Swiper(".swiper-container",{direction:"horizontal",loop:!0,slidesPerView:1,spaceBetween:0,width:null,touchEventsTarget:"container",touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,grabCursor:!0,pagination:{el:".swiper-pagination",clickable:!0},effect:"slide",speed:400});console.error("La bibliothèque Swiper n'est pas chargée.")}();let g=null,p=[],b=!1,y=!1,w=!1,E=0,v=null;h.onSpeakingStarted=()=>{console.log("TTS a commencé à parler"),g&&(g.start(),d.updateUI(!0,!1))},h.onSpeakingEnded=()=>{console.log("TTS a terminé de parler")},h.onSpeakingInterrupted=()=>{console.log("TTS a été interrompu"),y=!0};const S=t.getItem("groq-api-key");S&&d.setApiKey(S),document.getElementById("api-key").addEventListener("change",(()=>{t.setItem("groq-api-key",d.getApiKey())})),document.getElementById("start-button").addEventListener("click",(async()=>{try{if(g=new e({onSpeechStart:()=>{console.log("Parole détectée"),h.isSpeaking&&(console.log("Interruption du TTS"),w=!0,h.cancel(),d.updateUI(!0,!0),u.cancel(),m.cancel(),b=!1),g.isMuted()||d.updateUI(!0,!0)},onSpeechEnd:e=>{console.log("Fin de parole, audio length:",e.length),g.isMuted()||(d.updateUI(!0,!1),e&&e.length>=100?I(e):console.warn("Segment audio trop court ou invalide",e?.length),w=!1)},onError:e=>{console.error("Erreur de détection vocale:",e),c.addInfoMessage(`Erreur: ${e.message}`,"error")}}),!await g.initialize())throw new Error("Échec de l'initialisation de la détection vocale");g.start(),d.updateUI(!0,!1),c.addInfoMessage("Détection vocale démarrée","success")}catch(e){console.error("Erreur lors de l'initialisation:",e),c.addInfoMessage(`Erreur d'initialisation: ${e.message}`,"error")}})),document.getElementById("stop-button").addEventListener("click",(()=>{k()})),document.getElementById("mute-button").addEventListener("click",(()=>{g&&(g.setMute(!g.isMuted()),d.updateMuteState(g.isMuted()))}));const f=document.getElementById("record-button"),x=document.getElementById("stop-record-button");x&&(x.style.display="none"),f&&x&&(f.addEventListener("click",(async()=>{if(!v&&(v=new l({onRecordingStart:()=>{console.log("Enregistrement manuel démarré"),f.style.display="none",x.style.display="flex",f.disabled=!0,f.classList.add("bg-gray-300","text-gray-500","cursor-not-allowed"),f.classList.remove("bg-indigo-700","text-white","hover:bg-indigo-800"),x.disabled=!1,x.classList.add("bg-red-500","text-white","hover:bg-red-600"),x.classList.remove("bg-slate-200","text-slate-400","cursor-not-allowed"),c.addInfoMessage("Enregistrement en cours...","info")},onRecordingStop:()=>{console.log("Enregistrement manuel arrêté"),x.style.display="none",f.style.display="flex",f.disabled=!1,f.classList.remove("bg-gray-300","text-gray-500","cursor-not-allowed"),f.classList.add("bg-indigo-700","text-white","hover:bg-indigo-800"),x.disabled=!0,x.classList.remove("bg-red-500","text-white","hover:bg-red-600"),x.classList.add("bg-slate-200","text-slate-400","cursor-not-allowed"),g.stop()},onRecordingComplete:async e=>{console.log("Enregistrement terminé, traitement en cours"),I(e)},onError:e=>{console.error("Erreur d'enregistrement:",e),c.addInfoMessage(`Erreur: ${e.message}`,"error")}}),!await v.initialize()))return console.error("Échec de l'initialisation de l'enregistreur"),void c.addInfoMessage("Impossible d'initialiser l'enregistreur","error");v.startRecording()})),x.addEventListener("click",(()=>{if(v&&v.isRecording()){v.stopRecording();const e=document.getElementById("start-button"),t=document.getElementById("stop-button");e.style.display="flex !important",t.style.display="none !important"}})));const T=document.getElementById("text-input-form");async function I(e){if(!e||e.length<100)return void console.warn("Segment audio trop court ou invalide",e?.length);p.push(e);const t=++E;d.addSegment(p.length,e.length/16e3);try{b=!0,d.updateUI(!0,!1,!0),g&&g.pause(),c.addPendingUserMessage(t);const s=d.getApiKey();if(!s)throw new Error("Aucune clé API fournie");const n=await u.transcribe(e,s);console.log("Transcription:",n),c.updateUserMessage(t,n),c.addPendingAssistantMessage(t);const o=await m.sendMessage(n,s);console.log("Réponse du LLM:",o),c.updateAssistantMessage(t,o),y=!1;try{await h.speak(o)}catch(e){console.error("Erreur lors de la synthèse vocale:",e)}}catch(e){if("AbortError"===e.name)return void console.log("Requête annulée volontairement");console.error("Erreur de traitement:",e),c.addInfoMessage(`Erreur: ${e.message}`,"error")}finally{b=!1,!y&&g&&g.isListening()&&d.updateUI(!0,!1)}}function k(){g&&g.stop(),v&&(v.isRecording()&&v.stopRecording(),v.dispose(),v=null),u.cancel(),m.cancel(),h.cancel(),b=!1,y=!1,w=!1,d.updateUI(!1),f&&x&&(x.style.display="none",f.style.display="flex",f.disabled=!1,f.classList.remove("bg-gray-300","text-gray-500","cursor-not-allowed"),f.classList.add("bg-indigo-700","text-white","hover:bg-indigo-800"),x.disabled=!0,x.classList.remove("bg-red-500","text-white","hover:bg-red-600"),x.classList.add("bg-slate-200","text-slate-400","cursor-not-allowed")),c.addInfoMessage("Session arrêtée","info")}T&&T.addEventListener("submit",(async e=>{e.preventDefault();const t=document.getElementById("text-input"),s=t.value.trim();if(s)try{const e=d.getApiKey();if(!e)throw new Error("Aucune clé API fournie");const n=++E;c.addUserTextMessage(n,s),t.value="",t.disabled=!0,document.getElementById("send-text-button").disabled=!0,c.addPendingAssistantMessage(n);const o=await m.sendMessage(s,e);if(console.log("Réponse du LLM:",o),c.updateAssistantMessage(n,o),g&&g.isListening())try{await h.speak(o)}catch(e){console.error("Erreur TTS ignorée:",e)}}catch(e){console.error("Erreur lors du traitement du texte:",e),c.addInfoMessage(`Erreur: ${e.message}`,"error")}finally{const e=document.getElementById("text-input");e&&(e.disabled=!1,e.focus());const t=document.getElementById("send-text-button");t&&(t.disabled=!1)}}));const L=document.querySelector("button.bg-emerald-50");L&&L.addEventListener("click",(()=>{k(),c.clearConversation(),p=[],d.resetSegments(),m.clearHistory(),E=0,c.addInfoMessage("Conversation réinitialisée","success")}))}))})();